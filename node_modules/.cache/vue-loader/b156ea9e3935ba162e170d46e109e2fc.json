{"remainingRequest":"F:\\VueJs\\Codes\\real-world-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\VueJs\\Codes\\real-world-vue\\src\\views\\EventCreate.vue?vue&type=style&index=1&id=469630ec&scoped=true&lang=css&","dependencies":[{"path":"F:\\VueJs\\Codes\\real-world-vue\\src\\views\\EventCreate.vue","mtime":1620673349882},{"path":"F:\\VueJs\\Codes\\real-world-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\VueJs\\Codes\\real-world-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\VueJs\\Codes\\real-world-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\VueJs\\Codes\\real-world-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\VueJs\\Codes\\real-world-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLyogQGltcG9ydCAnLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1tdWx0aXNlbGVjdC9kaXN0L3Z1ZS1tdWx0aXNlbGVjdC5taW4uY3NzJzsgKi8KLmZpbGVkIHsKICBtYXJnaW4tYm90dG9tOiAyNHB4Owp9Ci5kYXRlZXJyb3IgewogIGJvcmRlcjogMXB4IHNvbGlkIHJlZCAhaW1wb3J0YW50Owp9Cg=="},{"version":3,"sources":["EventCreate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgMA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EventCreate.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <h1>Create an Event</h1>\n    <form @submit.prevent=\"newEvent\">\n      <BaseSelect\n        label=\"Select a category\"\n        :options=\"categories\"\n        v-model=\"event.category\"\n        class=\"field\"\n        :class=\"{ error: $v.event.category.$error }\"\n        @blur=\"!$v.event.category.$touch()\"\n      />\n      <template v-if=\"$v.event.category.$error\">\n        <p v-if=\"!$v.event.category.required\" class=\"errorMessage\">\n          Category is required\n        </p>\n      </template>\n\n      <h3>Name & describe your event</h3>\n      <BaseInput\n        label=\"Title\"\n        v-model=\"event.title\"\n        type=\"text\"\n        placeholder=\"Title\"\n        class=\"field\"\n        :class=\"{ error: $v.event.title.$error }\"\n        @blur=\"!$v.event.title.$touch()\"\n      />\n      <template v-if=\"$v.event.title.$error\">\n        <p v-if=\"!$v.event.title.required\" class=\"errorMessage\">\n          Title is required\n        </p>\n      </template>\n      <BaseInput\n        label=\"Description\"\n        v-model=\"event.description\"\n        type=\"text\"\n        placeholder=\"Add a description\"\n        class=\"field\"\n        :class=\"{ error: $v.event.description.$error }\"\n        @blur=\"!$v.event.description.$touch()\"\n      />\n      <template v-if=\"$v.event.description.$error\">\n        <p v-if=\"!$v.event.description.required\" class=\"errorMessage\">\n          Description is required\n        </p>\n      </template>\n      <h3>Where is your event?</h3>\n      <BaseInput\n        label=\"Location\"\n        v-model=\"event.location\"\n        type=\"text\"\n        placeholder=\"Add a location\"\n        class=\"field\"\n        :class=\"{ error: $v.event.location.$error }\"\n        @blur=\"!$v.event.location.$touch()\"\n      />\n      <template v-if=\"$v.event.location.$error\">\n        <p v-if=\"!$v.event.location.required\" class=\"errorMessage\">\n          Location is required\n        </p>\n      </template>\n      <h3>When is your event?</h3>\n\n      <div class=\"field\">\n        <label>Date</label>\n        <datepicker\n          v-model=\"event.date\"\n          placeholder=\"Select a date\"\n          :input-class=\"{ dateerror: $v.event.date.$error }\"\n          @opened=\"$v.event.date.$touch()\"\n        />\n      </div>\n      <template v-if=\"$v.event.date.$error\">\n        <p v-if=\"!$v.event.date.required\" class=\"errorMessage\">\n          Date is required\n        </p>\n      </template>\n\n      <BaseSelect\n        label=\"Select a time\"\n        :options=\"times\"\n        v-model=\"event.time\"\n        class=\"field\"\n        :class=\"{ error: $v.event.time.$error }\"\n        @blur=\"!$v.event.time.$touch()\"\n      />\n      <template v-if=\"$v.event.time.$error\">\n        <p v-if=\"!$v.event.time.required\" class=\"errorMessage\">\n          Time is required\n        </p>\n      </template>\n      <!-- <label class=\"typo__label\">Select a time</label>\n      <multiselect\n        :options=\"times\"\n        v-model=\"event.time\"\n        :searchable=\"false\"\n        :close-on-select=\"false\"\n        :show-labels=\"false\"\n        :allow-empty=\"false\"\n        placeholder=\"Pick a value\"\n      ></multiselect> -->\n\n      <!-- <input type=\"submit\" class=\"button\" value=\"Submit\" /> -->\n      <BaseButton\n        style=\"margin-top:20px\"\n        type=\"submit\"\n        buttonClass=\"-fill-gradient\"\n        :disabled=\"$v.$anyError\"\n        >Submit</BaseButton\n      >\n      <p v-if=\"$v.$anyError\" class=\"errorMessage\">\n        Please fill out the required field(s).\n      </p>\n    </form>\n  </div>\n</template>\n\n<script>\n// import Multiselect from 'vue-multiselect'\nimport Datepicker from 'vuejs-datepicker'\nimport { mapActions } from 'vuex'\nimport NProgress from 'nprogress'\nimport { required } from 'vuelidate/lib/validators'\n\nexport default {\n  components: {\n    Datepicker\n    // Multiselect\n  },\n  data() {\n    const times = []\n    for (let i = 1; i <= 24; i++) {\n      times.push(i + ':00')\n    }\n    return {\n      times,\n      categories: this.$store.state.categories,\n      event: this.createFreshEventObject()\n    }\n  },\n  validations: {\n    event: {\n      category: { required },\n      title: { required },\n      description: { required },\n      location: { required },\n      date: { required },\n      time: { required }\n    }\n  },\n  methods: {\n    newEvent() {\n      this.$v.$touch()\n      if (!this.$v.$invalid) {\n        NProgress.start()\n        this.createEvent(this.event)\n          .then(() => {\n            this.createFreshEventObject()\n            this.$router.push({\n              name: 'event-show',\n              params: { id: this.event.id }\n            })\n          })\n          .catch(() => {\n            NProgress.done()\n            console.log('There was a problem creating event')\n          })\n      }\n    },\n    createFreshEventObject() {\n      const user = this.$store.state.user.user\n      const id = Math.floor(Math.random() * 10000000)\n      return {\n        id: id,\n        user: user,\n        category: '',\n        organizer: user,\n        title: '',\n        description: '',\n        location: '',\n        date: '',\n        time: '',\n        attendees: []\n      }\n    },\n    ...mapActions('event', ['createEvent'])\n  }\n}\n</script>\n<style src=\"vue-multiselect/dist/vue-multiselect.min.css\"></style>\n<style scoped>\n/* @import '../../node_modules/vue-multiselect/dist/vue-multiselect.min.css'; */\n.filed {\n  margin-bottom: 24px;\n}\n.dateerror {\n  border: 1px solid red !important;\n}\n</style>\n"]}]}